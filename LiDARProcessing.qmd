
```{r}
# Required libraries
library(lidR)
library(future)
library(tidyverse)
library(sf)
library(terra)

# Set directory paths
raw_dir <- file.path("./01_raw")
raw_las <- list.files(raw_dir, pattern = ".las$", full.names = TRUE)
```


```{r}
# Load LiDAR data
lidar_data <- readLAS(raw_las)

# Fix invalid data
lidar_data$ReturnNumber <- 1L
lidar_data$NumberOfReturns <- 1L
```


```{r}
# Save the LAS file, then reload it as a LAS Catalog for tiling
writeLAS(lidar_data, file.path(raw_dir, "lidar_data_fixed.las"))
lidar_data <- readLAScatalog(file.path(raw_dir, "lidar_data_fixed.las"), chunk_size = 105, chunk_buffer = 0)
```


```{r}
# Set tile directory and adjust tile settings
tile_dir <- file.path("./02_tile")
dir.create(tile_dir, showWarnings = FALSE)
opt_chunk_alignment(lidar_data) <- c(floor(mean(c(lidar_data$Min.X, lidar_data$Max.X))), floor(mean(c(lidar_data$Min.Y, lidar_data$Max.Y))))
opt_output_files(lidar_data) <- file.path(tile_dir, "{XLEFT}_{YBOTTOM}")
```


```{r}
# Set up parallel environment and tile the data
plan(multisession, workers = availableCores())
set_lidr_threads(1)
lidar_tiles <- catalog_retile(lidar_data)

# Save the lidar_tiles object to a file
saveRDS(lidar_tiles, "lidar_tiles.rds")
```


